Kristin Tong
COEN 177 Lab 7 - MINIX Scheduler

1) Install and run NoMachine and open a terminal
2) use the commands as follows...
	$ setup vmware
	$ minix-get-image
	$ vmware &
3) click minix3 on the lefthand sidebar
4) login with username `root` and optionally set password with `passwd`
5) in the VM use commands as follows to get the IP of the VM
	# tcpd ftp /usr/bin/in.ftpd &
	# ifconfig
6) in terminal use command
	$ ftp <insert IP addr from step 5>
7) login using root and password 
8) go to kernel directory in host terminal
	> cd /usr/src/kernel

9) copy proc.c file 
	> get proc.c
10) edit the loop in the pick_proc() function in proc.c

PRIVATE struct proc * pick_proc(void)
{
/* Decide who to run now.  A new process is selected and returned.
 * When a billable process is selected, record it in 'bill_ptr', so that the 
 * clock task can tell who to bill for system time.
 */
  register struct proc *rp;			/* process to run */
  int q;				/* iterate over queues */
  int randNum;
  int randQ;
  /* Check each of the scheduling queues for ready processes. The number of
   * queues is defined in proc.h, and priorities are set in the task table.
   * The lowest queue contains IDLE, which is always ready.
   */
  for (q=0; q < NR_SCHED_QUEUES; q++) {	
	randNum = rand() % 4;
	randQ = (rand() % (NR_SCHED_QUEUES - 3)) + 3;
	if(q > 2 && randNum == 1)
		q = randPro;
	<rest of code>
11) copy file back to kernel directory
	> put proc.c
12) in NoMachine VM use command
	# cd /usr/src
	# make world
	# reboot
13) observable changes: the reboot should take much longer than the original startup reboot did